{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import scipy as sp\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import pandas as pd\n",
    "from scipy import stats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>country</th>\n",
       "      <th>description</th>\n",
       "      <th>designation</th>\n",
       "      <th>points</th>\n",
       "      <th>price</th>\n",
       "      <th>province</th>\n",
       "      <th>region_1</th>\n",
       "      <th>region_2</th>\n",
       "      <th>taster_name</th>\n",
       "      <th>taster_twitter_handle</th>\n",
       "      <th>title</th>\n",
       "      <th>variety</th>\n",
       "      <th>winery</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Italy</td>\n",
       "      <td>Aromas include tropical fruit, broom, brimston...</td>\n",
       "      <td>Vulkà Bianco</td>\n",
       "      <td>87</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Sicily &amp; Sardinia</td>\n",
       "      <td>Etna</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Kerin O’Keefe</td>\n",
       "      <td>@kerinokeefe</td>\n",
       "      <td>Nicosia 2013 Vulkà Bianco  (Etna)</td>\n",
       "      <td>White Blend</td>\n",
       "      <td>Nicosia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Portugal</td>\n",
       "      <td>This is ripe and fruity, a wine that is smooth...</td>\n",
       "      <td>Avidagos</td>\n",
       "      <td>87</td>\n",
       "      <td>15.0</td>\n",
       "      <td>Douro</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Roger Voss</td>\n",
       "      <td>@vossroger</td>\n",
       "      <td>Quinta dos Avidagos 2011 Avidagos Red (Douro)</td>\n",
       "      <td>Portuguese Red</td>\n",
       "      <td>Quinta dos Avidagos</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>US</td>\n",
       "      <td>Tart and snappy, the flavors of lime flesh and...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>87</td>\n",
       "      <td>14.0</td>\n",
       "      <td>Oregon</td>\n",
       "      <td>Willamette Valley</td>\n",
       "      <td>Willamette Valley</td>\n",
       "      <td>Paul Gregutt</td>\n",
       "      <td>@paulgwine</td>\n",
       "      <td>Rainstorm 2013 Pinot Gris (Willamette Valley)</td>\n",
       "      <td>Pinot Gris</td>\n",
       "      <td>Rainstorm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>US</td>\n",
       "      <td>Pineapple rind, lemon pith and orange blossom ...</td>\n",
       "      <td>Reserve Late Harvest</td>\n",
       "      <td>87</td>\n",
       "      <td>13.0</td>\n",
       "      <td>Michigan</td>\n",
       "      <td>Lake Michigan Shore</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Alexander Peartree</td>\n",
       "      <td>NaN</td>\n",
       "      <td>St. Julian 2013 Reserve Late Harvest Riesling ...</td>\n",
       "      <td>Riesling</td>\n",
       "      <td>St. Julian</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>US</td>\n",
       "      <td>Much like the regular bottling from 2012, this...</td>\n",
       "      <td>Vintner's Reserve Wild Child Block</td>\n",
       "      <td>87</td>\n",
       "      <td>65.0</td>\n",
       "      <td>Oregon</td>\n",
       "      <td>Willamette Valley</td>\n",
       "      <td>Willamette Valley</td>\n",
       "      <td>Paul Gregutt</td>\n",
       "      <td>@paulgwine</td>\n",
       "      <td>Sweet Cheeks 2012 Vintner's Reserve Wild Child...</td>\n",
       "      <td>Pinot Noir</td>\n",
       "      <td>Sweet Cheeks</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0   country                                        description  \\\n",
       "0           0     Italy  Aromas include tropical fruit, broom, brimston...   \n",
       "1           1  Portugal  This is ripe and fruity, a wine that is smooth...   \n",
       "2           2        US  Tart and snappy, the flavors of lime flesh and...   \n",
       "3           3        US  Pineapple rind, lemon pith and orange blossom ...   \n",
       "4           4        US  Much like the regular bottling from 2012, this...   \n",
       "\n",
       "                          designation  points  price           province  \\\n",
       "0                        Vulkà Bianco      87    NaN  Sicily & Sardinia   \n",
       "1                            Avidagos      87   15.0              Douro   \n",
       "2                                 NaN      87   14.0             Oregon   \n",
       "3                Reserve Late Harvest      87   13.0           Michigan   \n",
       "4  Vintner's Reserve Wild Child Block      87   65.0             Oregon   \n",
       "\n",
       "              region_1           region_2         taster_name  \\\n",
       "0                 Etna                NaN       Kerin O’Keefe   \n",
       "1                  NaN                NaN          Roger Voss   \n",
       "2    Willamette Valley  Willamette Valley        Paul Gregutt   \n",
       "3  Lake Michigan Shore                NaN  Alexander Peartree   \n",
       "4    Willamette Valley  Willamette Valley        Paul Gregutt   \n",
       "\n",
       "  taster_twitter_handle                                              title  \\\n",
       "0          @kerinokeefe                  Nicosia 2013 Vulkà Bianco  (Etna)   \n",
       "1            @vossroger      Quinta dos Avidagos 2011 Avidagos Red (Douro)   \n",
       "2           @paulgwine       Rainstorm 2013 Pinot Gris (Willamette Valley)   \n",
       "3                   NaN  St. Julian 2013 Reserve Late Harvest Riesling ...   \n",
       "4           @paulgwine   Sweet Cheeks 2012 Vintner's Reserve Wild Child...   \n",
       "\n",
       "          variety               winery  \n",
       "0     White Blend              Nicosia  \n",
       "1  Portuguese Red  Quinta dos Avidagos  \n",
       "2      Pinot Gris            Rainstorm  \n",
       "3        Riesling           St. Julian  \n",
       "4      Pinot Noir         Sweet Cheeks  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_csv(\"winemag-data-130k-v2.csv\")\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = data[[ 'country', 'description', 'designation', 'points', 'price', 'province', 'title', 'variety', 'winery']]\n",
    "df.to_csv('wine.csv',index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>description</th>\n",
       "      <th>designation</th>\n",
       "      <th>points</th>\n",
       "      <th>price</th>\n",
       "      <th>province</th>\n",
       "      <th>title</th>\n",
       "      <th>variety</th>\n",
       "      <th>winery</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Italy</td>\n",
       "      <td>Aromas include tropical fruit, broom, brimston...</td>\n",
       "      <td>Vulkà Bianco</td>\n",
       "      <td>87</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Sicily &amp; Sardinia</td>\n",
       "      <td>Nicosia 2013 Vulkà Bianco  (Etna)</td>\n",
       "      <td>White Blend</td>\n",
       "      <td>Nicosia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Portugal</td>\n",
       "      <td>This is ripe and fruity, a wine that is smooth...</td>\n",
       "      <td>Avidagos</td>\n",
       "      <td>87</td>\n",
       "      <td>15.0</td>\n",
       "      <td>Douro</td>\n",
       "      <td>Quinta dos Avidagos 2011 Avidagos Red (Douro)</td>\n",
       "      <td>Portuguese Red</td>\n",
       "      <td>Quinta dos Avidagos</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>US</td>\n",
       "      <td>Tart and snappy, the flavors of lime flesh and...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>87</td>\n",
       "      <td>14.0</td>\n",
       "      <td>Oregon</td>\n",
       "      <td>Rainstorm 2013 Pinot Gris (Willamette Valley)</td>\n",
       "      <td>Pinot Gris</td>\n",
       "      <td>Rainstorm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>US</td>\n",
       "      <td>Pineapple rind, lemon pith and orange blossom ...</td>\n",
       "      <td>Reserve Late Harvest</td>\n",
       "      <td>87</td>\n",
       "      <td>13.0</td>\n",
       "      <td>Michigan</td>\n",
       "      <td>St. Julian 2013 Reserve Late Harvest Riesling ...</td>\n",
       "      <td>Riesling</td>\n",
       "      <td>St. Julian</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>US</td>\n",
       "      <td>Much like the regular bottling from 2012, this...</td>\n",
       "      <td>Vintner's Reserve Wild Child Block</td>\n",
       "      <td>87</td>\n",
       "      <td>65.0</td>\n",
       "      <td>Oregon</td>\n",
       "      <td>Sweet Cheeks 2012 Vintner's Reserve Wild Child...</td>\n",
       "      <td>Pinot Noir</td>\n",
       "      <td>Sweet Cheeks</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    country                                        description  \\\n",
       "0     Italy  Aromas include tropical fruit, broom, brimston...   \n",
       "1  Portugal  This is ripe and fruity, a wine that is smooth...   \n",
       "2        US  Tart and snappy, the flavors of lime flesh and...   \n",
       "3        US  Pineapple rind, lemon pith and orange blossom ...   \n",
       "4        US  Much like the regular bottling from 2012, this...   \n",
       "\n",
       "                          designation  points  price           province  \\\n",
       "0                        Vulkà Bianco      87    NaN  Sicily & Sardinia   \n",
       "1                            Avidagos      87   15.0              Douro   \n",
       "2                                 NaN      87   14.0             Oregon   \n",
       "3                Reserve Late Harvest      87   13.0           Michigan   \n",
       "4  Vintner's Reserve Wild Child Block      87   65.0             Oregon   \n",
       "\n",
       "                                               title         variety  \\\n",
       "0                  Nicosia 2013 Vulkà Bianco  (Etna)     White Blend   \n",
       "1      Quinta dos Avidagos 2011 Avidagos Red (Douro)  Portuguese Red   \n",
       "2      Rainstorm 2013 Pinot Gris (Willamette Valley)      Pinot Gris   \n",
       "3  St. Julian 2013 Reserve Late Harvest Riesling ...        Riesling   \n",
       "4  Sweet Cheeks 2012 Vintner's Reserve Wild Child...      Pinot Noir   \n",
       "\n",
       "                winery  \n",
       "0              Nicosia  \n",
       "1  Quinta dos Avidagos  \n",
       "2            Rainstorm  \n",
       "3           St. Julian  \n",
       "4         Sweet Cheeks  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataNew = pd.read_csv(\"wine.csv\")\n",
    "dataNew.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Выберем вина с ценой от 70 до 150:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{False: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, ...], True: [60, 73, 75, 99, 111, 118, 119, 120, 130, 134, 139, 143, 144, 168, 215, 236, 289, 293, 348, 350, 356, 359, 360, 434, 459, 464, 470, 471, 472, 475, 476, 511, 513, 515, 537, 543, 545, 547, 548, 549, 555, 556, 565, 568, 629, 636, 647, 649, 656, 660, 683, 685, 688, 710, 725, 739, 748, 759, 774, 776, 778, 779, 781, 787, 791, 810, 825, 849, 850, 859, 888, 896, 1010, 1019, 1041, 1068, 1069, 1072, 1073, 1074, 1076, 1079, 1082, 1083, 1084, 1088, 1089, 1091, 1109, 1139, 1189, 1197, 1205, 1207, 1211, 1219, 1224, 1258, 1276, 1293, ...]}"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def isPrice(x):\n",
    "    if type(x)==float:\n",
    "        if 70 <= x <= 150:\n",
    "            return True\n",
    "        else:\n",
    "            return False                  \n",
    "    return False\n",
    "\n",
    "Price = dataNew.groupby(dataNew.apply(lambda x: isPrice(x['price']) ,axis=1))\n",
    "Price.groups"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Выведем, например, цену для строки с индексом 60:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "100.0\n"
     ]
    }
   ],
   "source": [
    "print(dataNew['price'][60])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Отберем те, у которых \"True\", а также выбросим NaN:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>description</th>\n",
       "      <th>designation</th>\n",
       "      <th>points</th>\n",
       "      <th>price</th>\n",
       "      <th>province</th>\n",
       "      <th>title</th>\n",
       "      <th>variety</th>\n",
       "      <th>winery</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>US</td>\n",
       "      <td>Syrupy and dense, this wine is jammy in plum a...</td>\n",
       "      <td>Estate</td>\n",
       "      <td>86</td>\n",
       "      <td>100.0</td>\n",
       "      <td>California</td>\n",
       "      <td>Okapi 2013 Estate Cabernet Sauvignon (Napa Val...</td>\n",
       "      <td>Cabernet Sauvignon</td>\n",
       "      <td>Okapi</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>US</td>\n",
       "      <td>Juicy plum, raspberry and pencil lead lead the...</td>\n",
       "      <td>Bella Vetta Vineyard</td>\n",
       "      <td>86</td>\n",
       "      <td>75.0</td>\n",
       "      <td>California</td>\n",
       "      <td>Hindsight 2013 Bella Vetta Vineyard Cabernet S...</td>\n",
       "      <td>Cabernet Sauvignon</td>\n",
       "      <td>Hindsight</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>US</td>\n",
       "      <td>This is made from equal parts Cabernet Franc a...</td>\n",
       "      <td>The Cypher</td>\n",
       "      <td>86</td>\n",
       "      <td>75.0</td>\n",
       "      <td>California</td>\n",
       "      <td>Mulvane Wine Co. 2013 The Cypher Red (Napa Val...</td>\n",
       "      <td>Bordeaux-style Red Blend</td>\n",
       "      <td>Mulvane Wine Co.</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>US</td>\n",
       "      <td>This blends 20% each of all five red-Bordeaux ...</td>\n",
       "      <td>Intreccio Library Selection</td>\n",
       "      <td>88</td>\n",
       "      <td>75.0</td>\n",
       "      <td>California</td>\n",
       "      <td>Soquel Vineyards 2013 Intreccio Library Select...</td>\n",
       "      <td>Bordeaux-style Red Blend</td>\n",
       "      <td>Soquel Vineyards</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>US</td>\n",
       "      <td>This 100% varietal wine opens in a heady aroma...</td>\n",
       "      <td>Wolff Vineyard</td>\n",
       "      <td>87</td>\n",
       "      <td>85.0</td>\n",
       "      <td>California</td>\n",
       "      <td>Piña 2013 Wolff Vineyard Cabernet Sauvignon (Y...</td>\n",
       "      <td>Cabernet Sauvignon</td>\n",
       "      <td>Piña</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129886</th>\n",
       "      <td>Argentina</td>\n",
       "      <td>Full aromas of toasty oak, blackberry and vani...</td>\n",
       "      <td>One La Dolores Vineyard</td>\n",
       "      <td>91</td>\n",
       "      <td>88.0</td>\n",
       "      <td>Mendoza Province</td>\n",
       "      <td>Antigal 2008 One La Dolores Vineyard Malbec (M...</td>\n",
       "      <td>Malbec</td>\n",
       "      <td>Antigal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129887</th>\n",
       "      <td>Argentina</td>\n",
       "      <td>Earthy balsamic aromas of cheesy oak, blackber...</td>\n",
       "      <td>One Doña Angeles Vineyard</td>\n",
       "      <td>91</td>\n",
       "      <td>88.0</td>\n",
       "      <td>Mendoza Province</td>\n",
       "      <td>Antigal 2010 One Doña Angeles Vineyard Malbec ...</td>\n",
       "      <td>Malbec</td>\n",
       "      <td>Antigal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129891</th>\n",
       "      <td>US</td>\n",
       "      <td>Chocolate, mocha and coconut notes highlight t...</td>\n",
       "      <td>Estate Block 3</td>\n",
       "      <td>91</td>\n",
       "      <td>100.0</td>\n",
       "      <td>California</td>\n",
       "      <td>Jax 2013 Estate Block 3 Cabernet Sauvignon (Ca...</td>\n",
       "      <td>Cabernet Sauvignon</td>\n",
       "      <td>Jax</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129919</th>\n",
       "      <td>US</td>\n",
       "      <td>This ripe, rich, almost decadently thick wine ...</td>\n",
       "      <td>Reserve</td>\n",
       "      <td>91</td>\n",
       "      <td>105.0</td>\n",
       "      <td>Washington</td>\n",
       "      <td>Nicholas Cole Cellars 2004 Reserve Red (Walla ...</td>\n",
       "      <td>Red Blend</td>\n",
       "      <td>Nicholas Cole Cellars</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129939</th>\n",
       "      <td>Austria</td>\n",
       "      <td>A true TBA, its very rich, toffee-flavored, in...</td>\n",
       "      <td>Grand Vin</td>\n",
       "      <td>91</td>\n",
       "      <td>70.0</td>\n",
       "      <td>Burgenland</td>\n",
       "      <td>Schloss Halbturn 2004 Grand Vin White (Burgenl...</td>\n",
       "      <td>White Blend</td>\n",
       "      <td>Schloss Halbturn</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>7778 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          country                                        description  \\\n",
       "60             US  Syrupy and dense, this wine is jammy in plum a...   \n",
       "73             US  Juicy plum, raspberry and pencil lead lead the...   \n",
       "75             US  This is made from equal parts Cabernet Franc a...   \n",
       "99             US  This blends 20% each of all five red-Bordeaux ...   \n",
       "111            US  This 100% varietal wine opens in a heady aroma...   \n",
       "...           ...                                                ...   \n",
       "129886  Argentina  Full aromas of toasty oak, blackberry and vani...   \n",
       "129887  Argentina  Earthy balsamic aromas of cheesy oak, blackber...   \n",
       "129891         US  Chocolate, mocha and coconut notes highlight t...   \n",
       "129919         US  This ripe, rich, almost decadently thick wine ...   \n",
       "129939    Austria  A true TBA, its very rich, toffee-flavored, in...   \n",
       "\n",
       "                        designation  points  price          province  \\\n",
       "60                           Estate      86  100.0        California   \n",
       "73             Bella Vetta Vineyard      86   75.0        California   \n",
       "75                       The Cypher      86   75.0        California   \n",
       "99      Intreccio Library Selection      88   75.0        California   \n",
       "111                  Wolff Vineyard      87   85.0        California   \n",
       "...                             ...     ...    ...               ...   \n",
       "129886      One La Dolores Vineyard      91   88.0  Mendoza Province   \n",
       "129887    One Doña Angeles Vineyard      91   88.0  Mendoza Province   \n",
       "129891               Estate Block 3      91  100.0        California   \n",
       "129919                      Reserve      91  105.0        Washington   \n",
       "129939                    Grand Vin      91   70.0        Burgenland   \n",
       "\n",
       "                                                    title  \\\n",
       "60      Okapi 2013 Estate Cabernet Sauvignon (Napa Val...   \n",
       "73      Hindsight 2013 Bella Vetta Vineyard Cabernet S...   \n",
       "75      Mulvane Wine Co. 2013 The Cypher Red (Napa Val...   \n",
       "99      Soquel Vineyards 2013 Intreccio Library Select...   \n",
       "111     Piña 2013 Wolff Vineyard Cabernet Sauvignon (Y...   \n",
       "...                                                   ...   \n",
       "129886  Antigal 2008 One La Dolores Vineyard Malbec (M...   \n",
       "129887  Antigal 2010 One Doña Angeles Vineyard Malbec ...   \n",
       "129891  Jax 2013 Estate Block 3 Cabernet Sauvignon (Ca...   \n",
       "129919  Nicholas Cole Cellars 2004 Reserve Red (Walla ...   \n",
       "129939  Schloss Halbturn 2004 Grand Vin White (Burgenl...   \n",
       "\n",
       "                         variety                 winery  \n",
       "60            Cabernet Sauvignon                  Okapi  \n",
       "73            Cabernet Sauvignon              Hindsight  \n",
       "75      Bordeaux-style Red Blend       Mulvane Wine Co.  \n",
       "99      Bordeaux-style Red Blend       Soquel Vineyards  \n",
       "111           Cabernet Sauvignon                   Piña  \n",
       "...                          ...                    ...  \n",
       "129886                    Malbec                Antigal  \n",
       "129887                    Malbec                Antigal  \n",
       "129891        Cabernet Sauvignon                    Jax  \n",
       "129919                 Red Blend  Nicholas Cole Cellars  \n",
       "129939               White Blend       Schloss Halbturn  \n",
       "\n",
       "[7778 rows x 9 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "winePrice = Price.get_group(True)    \n",
    "winePrice = winePrice.dropna(axis=0)     #выбрасываем строки с NaN\n",
    "winePrice"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Посмотрим, как все это распределено по странам:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Argentina': [4367, 4638, 4784, 4912, 7511, 7866, 7867, 7928, 8869, 9381, 9390, 9391, 9603, 9765, 9766, 9790, 10108, 10924, 10935, 13378, 13633, 16489, 16511, 16630, 17084, 17753, 19720, 19726, 19832, 21808, 22371, 22372, 23174, 23176, 23186, 26535, 29775, 30162, 30167, 31352, 31581, 32430, 34411, 35333, 35483, 35746, 36613, 36677, 36678, 36701, 38039, 38670, 39467, 39668, 41423, 45016, 45712, 47127, 47129, 47375, 51349, 51570, 51883, 53356, 53363, 54130, 55813, 56003, 56437, 56830, 57868, 58514, 59355, 61719, 64326, 65759, 65766, 66753, 68239, 68337, 68612, 69812, 70138, 70682, 70814, 70819, 72255, 72315, 73619, 73744, 75500, 76584, 76918, 78302, 78303, 78676, 79781, 80597, 82754, 84938, ...], 'Australia': [293, 348, 356, 360, 636, 1074, 3080, 7387, 7785, 7800, 8937, 9251, 9808, 10901, 11496, 11497, 11551, 11831, 12254, 12878, 15209, 15547, 15553, 16312, 16328, 17054, 18637, 18852, 19378, 19388, 21451, 21761, 24794, 25212, 25351, 25389, 25397, 26127, 26539, 27418, 27646, 28126, 28185, 29224, 30168, 30412, 32010, 32511, 33626, 34120, 34121, 34502, 34506, 34642, 35336, 35391, 35743, 36693, 38598, 38962, 39086, 39339, 39962, 40612, 40752, 43061, 43065, 43195, 45031, 45466, 46615, 46788, 46879, 49338, 49586, 49603, 49721, 49722, 50252, 50505, 54538, 54636, 55896, 56439, 56443, 56458, 56956, 56957, 58226, 58894, 59702, 59703, 59821, 59977, 59984, 60034, 61148, 62335, 62556, 62801, ...], 'Austria': [3652, 3656, 4763, 7374, 7782, 7793, 9775, 10719, 10726, 11339, 12954, 13454, 15542, 16011, 16438, 20703, 21089, 21092, 21096, 23627, 25007, 25402, 26404, 26905, 27560, 27571, 27575, 29883, 29884, 29897, 29910, 30596, 32199, 32885, 32891, 33852, 35668, 35673, 36533, 38853, 38857, 39304, 41276, 42396, 44156, 44635, 44651, 44652, 44654, 44744, 46467, 46476, 47434, 49641, 49642, 51561, 54300, 54301, 54308, 54309, 54316, 55859, 55892, 56753, 58208, 61040, 68374, 74255, 74841, 77029, 77030, 77033, 77035, 77254, 78216, 78220, 82817, 84214, 85015, 85316, 85531, 85539, 85788, 87539, 89456, 90470, 93770, 93777, 93783, 94748, 94762, 96722, 98383, 98387, 98389, 98392, 98395, 98399, 100281, 100283, ...], 'Bulgaria': [119450], 'Canada': [6465, 8230, 8234, 10789, 10790, 12140, 26197, 32268, 37980, 64841, 74084, 88947, 91948, 92250, 95323, 96607, 97579, 97586, 97601, 99105, 115190, 115711, 123978, 129055], 'Chile': [1509, 5131, 6911, 8068, 8072, 8184, 8186, 8187, 8394, 9029, 9309, 9562, 11252, 11644, 13440, 14454, 14463, 16148, 16521, 18036, 22144, 23366, 25013, 25424, 26247, 26678, 27863, 28623, 29103, 29106, 29195, 29836, 30502, 31369, 31753, 32725, 33052, 34756, 35208, 37649, 38151, 39106, 40177, 40337, 45292, 46125, 48951, 49592, 49951, 49973, 51388, 51949, 52188, 52428, 52673, 53080, 53423, 53656, 54679, 54942, 55214, 56299, 56302, 59108, 62102, 66012, 66797, 67535, 68224, 68726, 69459, 70537, 73468, 73993, 74593, 75721, 76209, 77085, 80069, 80345, 80553, 81539, 82248, 82273, 82647, 82725, 84462, 85722, 87309, 88367, 89851, 90334, 95145, 95554, 96623, 97587, 99053, 99565, 99599, 100889, ...], 'England': [9909, 24839, 27356, 47731, 60002, 68212, 84240, 104659, 112264, 115319, 124898], 'France': [119, 139, 143, 359, 459, 470, 471, 472, 511, 776, 779, 850, 1076, 1084, 1356, 1446, 1450, 1451, 1453, 1463, 1874, 2041, 2079, 2227, 3071, 3072, 3193, 3687, 3699, 3824, 3825, 3963, 3964, 4141, 4373, 6029, 6129, 6130, 6149, 6438, 6459, 6470, 6572, 6576, 6582, 6659, 6743, 6867, 7367, 7510, 7518, 7613, 7773, 7855, 7858, 7875, 8098, 8099, 8102, 8103, 8104, 8120, 8121, 8278, 8290, 8379, 8787, 8888, 8889, 8892, 8894, 9311, 9396, 9472, 9506, 9530, 9548, 9618, 9782, 9809, 9899, 9905, 9906, 9908, 9913, 9914, 9920, 9926, 10006, 10202, 10466, 10792, 10912, 10920, 10922, 10923, 10936, 11065, 11195, 11202, ...], 'Germany': [464, 3382, 3702, 3871, 8214, 8714, 8875, 9048, 9052, 10428, 12530, 13525, 13530, 14684, 15206, 17471, 18635, 19300, 19314, 21618, 21619, 22499, 22513, 22855, 23013, 23187, 23973, 23978, 24631, 25969, 26435, 26453, 26537, 27063, 27075, 27325, 27607, 29022, 29209, 29813, 29873, 30903, 30914, 31409, 31412, 33200, 36486, 37639, 39078, 43062, 44153, 44154, 45347, 45352, 45467, 45943, 46106, 46901, 47513, 47922, 48262, 48380, 48821, 50513, 52860, 56284, 57886, 57934, 57935, 60867, 62337, 63570, 63778, 63781, 64261, 64345, 65792, 66065, 67102, 67453, 68171, 70802, 71420, 71437, 74151, 75913, 76034, 76215, 76749, 77966, 78126, 78149, 78681, 78790, 79790, 81646, 81982, 84255, 84498, 84583, ...], 'Greece': [2115], 'Hungary': [26102, 35025, 36696, 45988, 56341, 76303, 77704, 78448, 79138, 85413, 90912, 114888, 124961, 127296], 'Israel': [215, 13389, 14795, 19491, 22117, 23364, 29254, 40440, 50702, 56067, 60264, 63542, 70450, 79801, 79806, 82805, 83572, 84045, 84419, 85095, 85680, 86833, 101159, 103759, 115207, 120254, 120777, 122731], 'Italy': [118, 120, 130, 350, 434, 549, 683, 725, 739, 781, 1109, 1197, 1205, 1207, 1258, 1452, 1471, 1561, 1570, 1698, 1738, 1740, 1864, 1865, 1869, 1875, 1932, 2043, 2044, 2045, 2060, 2171, 2224, 2225, 2232, 2233, 2239, 2243, 2249, 2450, 2468, 2511, 2519, 2520, 2523, 2525, 2591, 2592, 2684, 2846, 3447, 3530, 3539, 3544, 3695, 4154, 4190, 4310, 4513, 4515, 4631, 4775, 5064, 5086, 5137, 5414, 5491, 5502, 5568, 5713, 5774, 5776, 5836, 6121, 6144, 6369, 6424, 6436, 6439, 6452, 6463, 6683, 6689, 6823, 6831, 6851, 7024, 7160, 7213, 7280, 7459, 7758, 7792, 7856, 7877, 7936, 8107, 8109, 8113, 8237, ...], 'Lebanon': [4896, 23149, 105618], 'Mexico': [80386], 'New Zealand': [1041, 4623, 5366, 8119, 8293, 11346, 12817, 13125, 21426, 26664, 29777, 30366, 34578, 44200, 49957, 51046, 55026, 58040, 63464, 64047, 66564, 74904, 81475, 82730, 82734, 85543, 88730, 91545, 91851, 93054, 94096, 94222, 95168, 95683, 95815, 97245, 98706, 99529, 99612, 111662, 111672, 113092, 113450, 114890, 115715, 122507, 122517, 123218], 'Portugal': [1072, 1073, 1224, 1447, 1884, 2393, 3836, 4643, 6348, 7195, 8881, 9671, 9807, 10334, 12860, 13374, 13430, 15245, 15526, 15632, 15776, 15778, 15779, 15780, 15792, 15797, 16165, 16311, 16324, 16992, 17654, 18443, 21892, 22846, 22868, 23304, 23597, 24950, 27060, 27074, 27275, 31960, 34092, 34645, 34649, 34743, 36502, 38982, 38983, 39649, 40327, 40640, 40643, 40726, 41422, 41428, 41429, 42166, 43822, 45010, 45028, 46007, 46009, 46876, 47657, 47859, 48075, 48100, 49442, 49495, 49595, 50720, 52645, 52778, 54250, 54252, 54259, 54260, 54261, 54262, 54678, 55628, 55643, 57050, 58362, 59299, 60149, 60953, 61448, 62939, 63233, 63545, 63779, 63780, 63922, 63935, 66809, 66936, 67000, 67016, ...], 'Romania': [44933], 'Slovenia': [87585], 'South Africa': [6835, 7178, 11822, 13985, 21586, 24081, 35440, 43706, 45276, 52456, 52647, 54336, 55854, 62351, 62899, 67998, 71204, 73553, 76568, 76619, 76770, 78309, 81290, 81845, 84262, 87063, 92506, 100035, 100036, 101153, 105532, 107795, 111532, 113648, 115591, 123839, 127280, 129312], 'Spain': [556, 1898, 3027, 3224, 3821, 4378, 5007, 5498, 5640, 7120, 7380, 8774, 8976, 8997, 9012, 10047, 10401, 10860, 10864, 11188, 11369, 11433, 11501, 11748, 12844, 12884, 13055, 13309, 14440, 14737, 15573, 15671, 15677, 15796, 15822, 16187, 16376, 16584, 16947, 17016, 17183, 18883, 19802, 20548, 20562, 21286, 21499, 21682, 23175, 23192, 23382, 23870, 23997, 24151, 24186, 25436, 25580, 25683, 26007, 26385, 26396, 27695, 29241, 30882, 31715, 32937, 33204, 33385, 34101, 34262, 34564, 34647, 34673, 34984, 35053, 35122, 35486, 35558, 35595, 35602, 35938, 36231, 37504, 37723, 38283, 38376, 39088, 39325, 39401, 39411, 39460, 39625, 39921, 40293, 40310, 41191, 41404, 41414, 43205, 43407, ...], 'US': [60, 73, 75, 99, 111, 144, 168, 236, 289, 475, 476, 513, 515, 543, 545, 547, 548, 565, 568, 629, 649, 656, 660, 685, 688, 748, 759, 774, 778, 787, 791, 888, 896, 1010, 1019, 1068, 1069, 1079, 1082, 1088, 1091, 1139, 1211, 1219, 1276, 1318, 1423, 1428, 1430, 1440, 1443, 1444, 1455, 1456, 1459, 1469, 1470, 1472, 1485, 1502, 1515, 1525, 1557, 1565, 1567, 1574, 1577, 1688, 1868, 2125, 2163, 2201, 2301, 2363, 2507, 2530, 2699, 2733, 2882, 2936, 2967, 3005, 3009, 3030, 3061, 3070, 3074, 3075, 3101, 3164, 3235, 3305, 3371, 3441, 3658, 3688, 3828, 3831, 3851, 3957, ...], 'Uruguay': [38811, 93548]}"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "winePrice.groupby('country').groups"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Среди нашей ценовой категории (70-150) выберем Калифорнию, Францию, Италию и Испанию:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{False: [215, 293, 348, 356, 360, 464, 636, 656, 688, 748, 774, 778, 791, 888, 1010, 1041, 1068, 1069, 1072, 1073, 1074, 1079, 1082, 1088, 1224, 1447, 1509, 1868, 1884, 2115, 2163, 2393, 2936, 2967, 3080, 3371, 3382, 3652, 3656, 3702, 3836, 3851, 3871, 4041, 4150, 4367, 4476, 4619, 4623, 4636, 4637, 4638, 4643, 4675, 4763, 4784, 4896, 4912, 5131, 5218, 5366, 5598, 5730, 6125, 6126, 6262, 6268, 6274, 6278, 6348, 6349, 6465, 6578, 6580, 6835, 6911, 7178, 7195, 7374, 7387, 7511, 7760, 7761, 7782, 7785, 7793, 7800, 7866, 7867, 7928, 8068, 8072, 8119, 8184, 8186, 8187, 8214, 8230, 8232, 8234, ...], True: [60, 73, 75, 99, 111, 118, 119, 120, 130, 139, 143, 144, 168, 236, 289, 350, 359, 434, 459, 470, 471, 472, 475, 476, 511, 513, 515, 543, 545, 547, 548, 549, 556, 565, 568, 629, 649, 660, 683, 685, 725, 739, 759, 776, 779, 781, 787, 850, 896, 1019, 1076, 1084, 1091, 1109, 1139, 1197, 1205, 1207, 1211, 1219, 1258, 1276, 1318, 1356, 1423, 1428, 1430, 1440, 1443, 1444, 1446, 1450, 1451, 1452, 1453, 1455, 1456, 1459, 1463, 1469, 1470, 1471, 1472, 1485, 1502, 1515, 1525, 1557, 1561, 1565, 1567, 1570, 1574, 1577, 1688, 1698, 1738, 1740, 1864, 1865, ...]}"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def isCountry(x):\n",
    "    if type(x)==str:\n",
    "            return (('California' in x) or ('France' in x) or ('Italy' in x) or ('Spain' in x))                 \n",
    "    return False\n",
    "\n",
    "Country = winePrice.groupby(winePrice.apply(lambda x: isCountry(x['country']) or isCountry(x['province']) ,axis=1))\n",
    "Country.groups"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>description</th>\n",
       "      <th>designation</th>\n",
       "      <th>points</th>\n",
       "      <th>price</th>\n",
       "      <th>province</th>\n",
       "      <th>title</th>\n",
       "      <th>variety</th>\n",
       "      <th>winery</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>US</td>\n",
       "      <td>Syrupy and dense, this wine is jammy in plum a...</td>\n",
       "      <td>Estate</td>\n",
       "      <td>86</td>\n",
       "      <td>100.0</td>\n",
       "      <td>California</td>\n",
       "      <td>Okapi 2013 Estate Cabernet Sauvignon (Napa Val...</td>\n",
       "      <td>Cabernet Sauvignon</td>\n",
       "      <td>Okapi</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>US</td>\n",
       "      <td>Juicy plum, raspberry and pencil lead lead the...</td>\n",
       "      <td>Bella Vetta Vineyard</td>\n",
       "      <td>86</td>\n",
       "      <td>75.0</td>\n",
       "      <td>California</td>\n",
       "      <td>Hindsight 2013 Bella Vetta Vineyard Cabernet S...</td>\n",
       "      <td>Cabernet Sauvignon</td>\n",
       "      <td>Hindsight</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>US</td>\n",
       "      <td>This is made from equal parts Cabernet Franc a...</td>\n",
       "      <td>The Cypher</td>\n",
       "      <td>86</td>\n",
       "      <td>75.0</td>\n",
       "      <td>California</td>\n",
       "      <td>Mulvane Wine Co. 2013 The Cypher Red (Napa Val...</td>\n",
       "      <td>Bordeaux-style Red Blend</td>\n",
       "      <td>Mulvane Wine Co.</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>US</td>\n",
       "      <td>This blends 20% each of all five red-Bordeaux ...</td>\n",
       "      <td>Intreccio Library Selection</td>\n",
       "      <td>88</td>\n",
       "      <td>75.0</td>\n",
       "      <td>California</td>\n",
       "      <td>Soquel Vineyards 2013 Intreccio Library Select...</td>\n",
       "      <td>Bordeaux-style Red Blend</td>\n",
       "      <td>Soquel Vineyards</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>US</td>\n",
       "      <td>This 100% varietal wine opens in a heady aroma...</td>\n",
       "      <td>Wolff Vineyard</td>\n",
       "      <td>87</td>\n",
       "      <td>85.0</td>\n",
       "      <td>California</td>\n",
       "      <td>Piña 2013 Wolff Vineyard Cabernet Sauvignon (Y...</td>\n",
       "      <td>Cabernet Sauvignon</td>\n",
       "      <td>Piña</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129800</th>\n",
       "      <td>France</td>\n",
       "      <td>With its white fruit, lively acidity and delic...</td>\n",
       "      <td>Cuvée Signature Le Porusot Premier Cru</td>\n",
       "      <td>88</td>\n",
       "      <td>75.0</td>\n",
       "      <td>Burgundy</td>\n",
       "      <td>Bouchard Aîné &amp; Fils 2009 Cuvée Signature Le P...</td>\n",
       "      <td>Chardonnay</td>\n",
       "      <td>Bouchard Aîné &amp; Fils</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129811</th>\n",
       "      <td>France</td>\n",
       "      <td>A tight, tannic wine, showing considerable aci...</td>\n",
       "      <td>Les Borniques</td>\n",
       "      <td>89</td>\n",
       "      <td>100.0</td>\n",
       "      <td>Burgundy</td>\n",
       "      <td>Roux Père et Fils 2008 Les Borniques  (Chambol...</td>\n",
       "      <td>Pinot Noir</td>\n",
       "      <td>Roux Père et Fils</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129818</th>\n",
       "      <td>France</td>\n",
       "      <td>Concentrated, with dark tannins to go with the...</td>\n",
       "      <td>Les Damodes</td>\n",
       "      <td>89</td>\n",
       "      <td>115.0</td>\n",
       "      <td>Burgundy</td>\n",
       "      <td>Louis Latour 2009 Les Damodes  (Nuits-St.-Geor...</td>\n",
       "      <td>Pinot Noir</td>\n",
       "      <td>Louis Latour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129819</th>\n",
       "      <td>Italy</td>\n",
       "      <td>Barbaresco NonnOrlando delivers clean and subt...</td>\n",
       "      <td>NonnOrlando</td>\n",
       "      <td>89</td>\n",
       "      <td>75.0</td>\n",
       "      <td>Piedmont</td>\n",
       "      <td>Vigin 2008 NonnOrlando  (Barbaresco)</td>\n",
       "      <td>Nebbiolo</td>\n",
       "      <td>Vigin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129891</th>\n",
       "      <td>US</td>\n",
       "      <td>Chocolate, mocha and coconut notes highlight t...</td>\n",
       "      <td>Estate Block 3</td>\n",
       "      <td>91</td>\n",
       "      <td>100.0</td>\n",
       "      <td>California</td>\n",
       "      <td>Jax 2013 Estate Block 3 Cabernet Sauvignon (Ca...</td>\n",
       "      <td>Cabernet Sauvignon</td>\n",
       "      <td>Jax</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5923 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       country                                        description  \\\n",
       "60          US  Syrupy and dense, this wine is jammy in plum a...   \n",
       "73          US  Juicy plum, raspberry and pencil lead lead the...   \n",
       "75          US  This is made from equal parts Cabernet Franc a...   \n",
       "99          US  This blends 20% each of all five red-Bordeaux ...   \n",
       "111         US  This 100% varietal wine opens in a heady aroma...   \n",
       "...        ...                                                ...   \n",
       "129800  France  With its white fruit, lively acidity and delic...   \n",
       "129811  France  A tight, tannic wine, showing considerable aci...   \n",
       "129818  France  Concentrated, with dark tannins to go with the...   \n",
       "129819   Italy  Barbaresco NonnOrlando delivers clean and subt...   \n",
       "129891      US  Chocolate, mocha and coconut notes highlight t...   \n",
       "\n",
       "                                   designation  points  price    province  \\\n",
       "60                                      Estate      86  100.0  California   \n",
       "73                        Bella Vetta Vineyard      86   75.0  California   \n",
       "75                                  The Cypher      86   75.0  California   \n",
       "99                 Intreccio Library Selection      88   75.0  California   \n",
       "111                             Wolff Vineyard      87   85.0  California   \n",
       "...                                        ...     ...    ...         ...   \n",
       "129800  Cuvée Signature Le Porusot Premier Cru      88   75.0    Burgundy   \n",
       "129811                           Les Borniques      89  100.0    Burgundy   \n",
       "129818                             Les Damodes      89  115.0    Burgundy   \n",
       "129819                             NonnOrlando      89   75.0    Piedmont   \n",
       "129891                          Estate Block 3      91  100.0  California   \n",
       "\n",
       "                                                    title  \\\n",
       "60      Okapi 2013 Estate Cabernet Sauvignon (Napa Val...   \n",
       "73      Hindsight 2013 Bella Vetta Vineyard Cabernet S...   \n",
       "75      Mulvane Wine Co. 2013 The Cypher Red (Napa Val...   \n",
       "99      Soquel Vineyards 2013 Intreccio Library Select...   \n",
       "111     Piña 2013 Wolff Vineyard Cabernet Sauvignon (Y...   \n",
       "...                                                   ...   \n",
       "129800  Bouchard Aîné & Fils 2009 Cuvée Signature Le P...   \n",
       "129811  Roux Père et Fils 2008 Les Borniques  (Chambol...   \n",
       "129818  Louis Latour 2009 Les Damodes  (Nuits-St.-Geor...   \n",
       "129819               Vigin 2008 NonnOrlando  (Barbaresco)   \n",
       "129891  Jax 2013 Estate Block 3 Cabernet Sauvignon (Ca...   \n",
       "\n",
       "                         variety                winery  \n",
       "60            Cabernet Sauvignon                 Okapi  \n",
       "73            Cabernet Sauvignon             Hindsight  \n",
       "75      Bordeaux-style Red Blend      Mulvane Wine Co.  \n",
       "99      Bordeaux-style Red Blend      Soquel Vineyards  \n",
       "111           Cabernet Sauvignon                  Piña  \n",
       "...                          ...                   ...  \n",
       "129800                Chardonnay  Bouchard Aîné & Fils  \n",
       "129811                Pinot Noir     Roux Père et Fils  \n",
       "129818                Pinot Noir          Louis Latour  \n",
       "129819                  Nebbiolo                 Vigin  \n",
       "129891        Cabernet Sauvignon                   Jax  \n",
       "\n",
       "[5923 rows x 9 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "finalCountry = Country.get_group(True)    \n",
    "finalCountry = finalCountry.dropna(axis=0)\n",
    "finalCountry"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Сделаем для удобства анализа данных для нашей задачи столбец \"continent\" (хоть его название и не совсем соответсвует его назначению):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "def Continent(x, y):\n",
    "    if (y == 'California'):\n",
    "        return 'California'\n",
    "    elif (x == 'France'):\n",
    "        return 'France'\n",
    "    elif (x == 'Italy'):\n",
    "        return 'Italy'\n",
    "    elif (x == 'Spain'):\n",
    "        return 'Spain'\n",
    "    return 'Other'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "finalCountry['continent'] = finalCountry.apply(lambda x: Continent(x['country'], x['province']), axis=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Построим непрерывную случайную величину. На основе выставленных оценок и цены построим величину (непрерывную), характеризующую качество."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>description</th>\n",
       "      <th>designation</th>\n",
       "      <th>points</th>\n",
       "      <th>price</th>\n",
       "      <th>province</th>\n",
       "      <th>title</th>\n",
       "      <th>variety</th>\n",
       "      <th>winery</th>\n",
       "      <th>continent</th>\n",
       "      <th>pointsbyprice</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>US</td>\n",
       "      <td>Syrupy and dense, this wine is jammy in plum a...</td>\n",
       "      <td>Estate</td>\n",
       "      <td>86</td>\n",
       "      <td>100.0</td>\n",
       "      <td>California</td>\n",
       "      <td>Okapi 2013 Estate Cabernet Sauvignon (Napa Val...</td>\n",
       "      <td>Cabernet Sauvignon</td>\n",
       "      <td>Okapi</td>\n",
       "      <td>California</td>\n",
       "      <td>5.888326</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>US</td>\n",
       "      <td>Juicy plum, raspberry and pencil lead lead the...</td>\n",
       "      <td>Bella Vetta Vineyard</td>\n",
       "      <td>86</td>\n",
       "      <td>75.0</td>\n",
       "      <td>California</td>\n",
       "      <td>Hindsight 2013 Bella Vetta Vineyard Cabernet S...</td>\n",
       "      <td>Cabernet Sauvignon</td>\n",
       "      <td>Hindsight</td>\n",
       "      <td>California</td>\n",
       "      <td>6.006640</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>US</td>\n",
       "      <td>This is made from equal parts Cabernet Franc a...</td>\n",
       "      <td>The Cypher</td>\n",
       "      <td>86</td>\n",
       "      <td>75.0</td>\n",
       "      <td>California</td>\n",
       "      <td>Mulvane Wine Co. 2013 The Cypher Red (Napa Val...</td>\n",
       "      <td>Bordeaux-style Red Blend</td>\n",
       "      <td>Mulvane Wine Co.</td>\n",
       "      <td>California</td>\n",
       "      <td>6.006640</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>US</td>\n",
       "      <td>This blends 20% each of all five red-Bordeaux ...</td>\n",
       "      <td>Intreccio Library Selection</td>\n",
       "      <td>88</td>\n",
       "      <td>75.0</td>\n",
       "      <td>California</td>\n",
       "      <td>Soquel Vineyards 2013 Intreccio Library Select...</td>\n",
       "      <td>Bordeaux-style Red Blend</td>\n",
       "      <td>Soquel Vineyards</td>\n",
       "      <td>California</td>\n",
       "      <td>6.146330</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>US</td>\n",
       "      <td>This 100% varietal wine opens in a heady aroma...</td>\n",
       "      <td>Wolff Vineyard</td>\n",
       "      <td>87</td>\n",
       "      <td>85.0</td>\n",
       "      <td>California</td>\n",
       "      <td>Piña 2013 Wolff Vineyard Cabernet Sauvignon (Y...</td>\n",
       "      <td>Cabernet Sauvignon</td>\n",
       "      <td>Piña</td>\n",
       "      <td>California</td>\n",
       "      <td>6.023825</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129800</th>\n",
       "      <td>France</td>\n",
       "      <td>With its white fruit, lively acidity and delic...</td>\n",
       "      <td>Cuvée Signature Le Porusot Premier Cru</td>\n",
       "      <td>88</td>\n",
       "      <td>75.0</td>\n",
       "      <td>Burgundy</td>\n",
       "      <td>Bouchard Aîné &amp; Fils 2009 Cuvée Signature Le P...</td>\n",
       "      <td>Chardonnay</td>\n",
       "      <td>Bouchard Aîné &amp; Fils</td>\n",
       "      <td>France</td>\n",
       "      <td>6.146330</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129811</th>\n",
       "      <td>France</td>\n",
       "      <td>A tight, tannic wine, showing considerable aci...</td>\n",
       "      <td>Les Borniques</td>\n",
       "      <td>89</td>\n",
       "      <td>100.0</td>\n",
       "      <td>Burgundy</td>\n",
       "      <td>Roux Père et Fils 2008 Les Borniques  (Chambol...</td>\n",
       "      <td>Pinot Noir</td>\n",
       "      <td>Roux Père et Fils</td>\n",
       "      <td>France</td>\n",
       "      <td>6.093732</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129818</th>\n",
       "      <td>France</td>\n",
       "      <td>Concentrated, with dark tannins to go with the...</td>\n",
       "      <td>Les Damodes</td>\n",
       "      <td>89</td>\n",
       "      <td>115.0</td>\n",
       "      <td>Burgundy</td>\n",
       "      <td>Louis Latour 2009 Les Damodes  (Nuits-St.-Geor...</td>\n",
       "      <td>Pinot Noir</td>\n",
       "      <td>Louis Latour</td>\n",
       "      <td>France</td>\n",
       "      <td>6.035972</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129819</th>\n",
       "      <td>Italy</td>\n",
       "      <td>Barbaresco NonnOrlando delivers clean and subt...</td>\n",
       "      <td>NonnOrlando</td>\n",
       "      <td>89</td>\n",
       "      <td>75.0</td>\n",
       "      <td>Piedmont</td>\n",
       "      <td>Vigin 2008 NonnOrlando  (Barbaresco)</td>\n",
       "      <td>Nebbiolo</td>\n",
       "      <td>Vigin</td>\n",
       "      <td>Italy</td>\n",
       "      <td>6.216174</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129891</th>\n",
       "      <td>US</td>\n",
       "      <td>Chocolate, mocha and coconut notes highlight t...</td>\n",
       "      <td>Estate Block 3</td>\n",
       "      <td>91</td>\n",
       "      <td>100.0</td>\n",
       "      <td>California</td>\n",
       "      <td>Jax 2013 Estate Block 3 Cabernet Sauvignon (Ca...</td>\n",
       "      <td>Cabernet Sauvignon</td>\n",
       "      <td>Jax</td>\n",
       "      <td>California</td>\n",
       "      <td>6.230670</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5923 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       country                                        description  \\\n",
       "60          US  Syrupy and dense, this wine is jammy in plum a...   \n",
       "73          US  Juicy plum, raspberry and pencil lead lead the...   \n",
       "75          US  This is made from equal parts Cabernet Franc a...   \n",
       "99          US  This blends 20% each of all five red-Bordeaux ...   \n",
       "111         US  This 100% varietal wine opens in a heady aroma...   \n",
       "...        ...                                                ...   \n",
       "129800  France  With its white fruit, lively acidity and delic...   \n",
       "129811  France  A tight, tannic wine, showing considerable aci...   \n",
       "129818  France  Concentrated, with dark tannins to go with the...   \n",
       "129819   Italy  Barbaresco NonnOrlando delivers clean and subt...   \n",
       "129891      US  Chocolate, mocha and coconut notes highlight t...   \n",
       "\n",
       "                                   designation  points  price    province  \\\n",
       "60                                      Estate      86  100.0  California   \n",
       "73                        Bella Vetta Vineyard      86   75.0  California   \n",
       "75                                  The Cypher      86   75.0  California   \n",
       "99                 Intreccio Library Selection      88   75.0  California   \n",
       "111                             Wolff Vineyard      87   85.0  California   \n",
       "...                                        ...     ...    ...         ...   \n",
       "129800  Cuvée Signature Le Porusot Premier Cru      88   75.0    Burgundy   \n",
       "129811                           Les Borniques      89  100.0    Burgundy   \n",
       "129818                             Les Damodes      89  115.0    Burgundy   \n",
       "129819                             NonnOrlando      89   75.0    Piedmont   \n",
       "129891                          Estate Block 3      91  100.0  California   \n",
       "\n",
       "                                                    title  \\\n",
       "60      Okapi 2013 Estate Cabernet Sauvignon (Napa Val...   \n",
       "73      Hindsight 2013 Bella Vetta Vineyard Cabernet S...   \n",
       "75      Mulvane Wine Co. 2013 The Cypher Red (Napa Val...   \n",
       "99      Soquel Vineyards 2013 Intreccio Library Select...   \n",
       "111     Piña 2013 Wolff Vineyard Cabernet Sauvignon (Y...   \n",
       "...                                                   ...   \n",
       "129800  Bouchard Aîné & Fils 2009 Cuvée Signature Le P...   \n",
       "129811  Roux Père et Fils 2008 Les Borniques  (Chambol...   \n",
       "129818  Louis Latour 2009 Les Damodes  (Nuits-St.-Geor...   \n",
       "129819               Vigin 2008 NonnOrlando  (Barbaresco)   \n",
       "129891  Jax 2013 Estate Block 3 Cabernet Sauvignon (Ca...   \n",
       "\n",
       "                         variety                winery   continent  \\\n",
       "60            Cabernet Sauvignon                 Okapi  California   \n",
       "73            Cabernet Sauvignon             Hindsight  California   \n",
       "75      Bordeaux-style Red Blend      Mulvane Wine Co.  California   \n",
       "99      Bordeaux-style Red Blend      Soquel Vineyards  California   \n",
       "111           Cabernet Sauvignon                  Piña  California   \n",
       "...                          ...                   ...         ...   \n",
       "129800                Chardonnay  Bouchard Aîné & Fils      France   \n",
       "129811                Pinot Noir     Roux Père et Fils      France   \n",
       "129818                Pinot Noir          Louis Latour      France   \n",
       "129819                  Nebbiolo                 Vigin       Italy   \n",
       "129891        Cabernet Sauvignon                   Jax  California   \n",
       "\n",
       "        pointsbyprice  \n",
       "60           5.888326  \n",
       "73           6.006640  \n",
       "75           6.006640  \n",
       "99           6.146330  \n",
       "111          6.023825  \n",
       "...               ...  \n",
       "129800       6.146330  \n",
       "129811       6.093732  \n",
       "129818       6.035972  \n",
       "129819       6.216174  \n",
       "129891       6.230670  \n",
       "\n",
       "[5923 rows x 11 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "finalCountry['pointsbyprice']= finalCountry.apply(lambda x: x['points']/(10+np.log( x['price'])), axis=1)\n",
    "finalCountry"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'California': [60, 73, 75, 99, 111, 144, 168, 236, 289, 475, 476, 513, 515, 543, 545, 547, 548, 565, 568, 629, 649, 660, 685, 759, 787, 896, 1019, 1091, 1139, 1211, 1219, 1276, 1318, 1423, 1428, 1430, 1440, 1443, 1444, 1455, 1456, 1459, 1469, 1470, 1472, 1485, 1502, 1515, 1525, 1557, 1565, 1567, 1574, 1577, 1688, 2125, 2201, 2301, 2363, 2507, 2530, 2699, 2733, 2882, 3005, 3009, 3030, 3061, 3070, 3074, 3075, 3101, 3164, 3235, 3305, 3441, 3658, 3688, 3828, 3831, 3957, 3974, 4110, 4153, 4158, 4240, 4242, 4337, 4376, 4466, 4496, 4505, 4506, 4507, 4508, 4509, 4512, 4514, 4520, 4592, ...], 'France': [119, 139, 143, 359, 459, 470, 471, 472, 511, 776, 779, 850, 1076, 1084, 1356, 1446, 1450, 1451, 1453, 1463, 1874, 2041, 2079, 2227, 3071, 3072, 3193, 3687, 3699, 3824, 3825, 3963, 3964, 4141, 4373, 6029, 6129, 6130, 6149, 6438, 6459, 6470, 6572, 6576, 6582, 6659, 6743, 6867, 7367, 7510, 7518, 7613, 7773, 7855, 7858, 7875, 8098, 8099, 8102, 8103, 8104, 8120, 8121, 8278, 8290, 8379, 8787, 8888, 8889, 8892, 8894, 9311, 9396, 9472, 9506, 9530, 9548, 9618, 9782, 9809, 9899, 9905, 9906, 9908, 9913, 9914, 9920, 9926, 10006, 10202, 10466, 10792, 10912, 10920, 10922, 10923, 10936, 11065, 11195, 11202, ...], 'Italy': [118, 120, 130, 350, 434, 549, 683, 725, 739, 781, 1109, 1197, 1205, 1207, 1258, 1452, 1471, 1561, 1570, 1698, 1738, 1740, 1864, 1865, 1869, 1875, 1932, 2043, 2044, 2045, 2060, 2171, 2224, 2225, 2232, 2233, 2239, 2243, 2249, 2450, 2468, 2511, 2519, 2520, 2523, 2525, 2591, 2592, 2684, 2846, 3447, 3530, 3539, 3544, 3695, 4154, 4190, 4310, 4513, 4515, 4631, 4775, 5064, 5086, 5137, 5414, 5491, 5502, 5568, 5713, 5774, 5776, 5836, 6121, 6144, 6369, 6424, 6436, 6439, 6452, 6463, 6683, 6689, 6823, 6831, 6851, 7024, 7160, 7213, 7280, 7459, 7758, 7792, 7856, 7877, 7936, 8107, 8109, 8113, 8237, ...], 'Spain': [556, 1898, 3027, 3224, 3821, 4378, 5007, 5498, 5640, 7120, 7380, 8774, 8976, 8997, 9012, 10047, 10401, 10860, 10864, 11188, 11369, 11433, 11501, 11748, 12844, 12884, 13055, 13309, 14440, 14737, 15573, 15671, 15677, 15796, 15822, 16187, 16376, 16584, 16947, 17016, 17183, 18883, 19802, 20548, 20562, 21286, 21499, 21682, 23175, 23192, 23382, 23870, 23997, 24151, 24186, 25436, 25580, 25683, 26007, 26385, 26396, 27695, 29241, 30882, 31715, 32937, 33204, 33385, 34101, 34262, 34564, 34647, 34673, 34984, 35053, 35122, 35486, 35558, 35595, 35602, 35938, 36231, 37504, 37723, 38283, 38376, 39088, 39325, 39401, 39411, 39460, 39625, 39921, 40293, 40310, 41191, 41404, 41414, 43205, 43407, ...]}"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "finalCountry.groupby('continent').groups"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "По \"ящику с усами\" прикинем разброс:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot( y=finalCountry['pointsbyprice'] );\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Видно, что нижний квартиль находится на уровне 6.2, а верхний - на чуть больше 6.4. Минимальное значение по выборке - это 5.8, а максимальное - 6.8. Точки сверху и снизу - это выбросы. Это результаты, которые очень далеки от результатов общей выборки."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot( y=finalCountry['pointsbyprice'], x=finalCountry['continent'] );\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Теперь проверим равенство дисперсий статистическими методами:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "finalCountry['pointsbyprice'][finalCountry['continent'] == 'California'] - это выборка величин, характеризующих качество, отвечающая строкам с 'California'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LeveneResult(statistic=40.98944366315318, pvalue=3.2905656783115276e-26)"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stats.levene(finalCountry['pointsbyprice'][finalCountry['continent'] == 'California'],\n",
    "             finalCountry['pointsbyprice'][finalCountry['continent'] == 'France'],\n",
    "             finalCountry['pointsbyprice'][finalCountry['continent'] == 'Italy'],\n",
    "             finalCountry['pointsbyprice'][finalCountry['continent'] == 'Spain'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Т.е. отвергаем гипотезу о равенстве дисперсий.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Проверим выборки на нормальность:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ShapiroResult(statistic=0.9852024912834167, pvalue=6.833109547311415e-16)"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stats.shapiro(finalCountry['pointsbyprice'][finalCountry['continent'] == 'California'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ShapiroResult(statistic=0.9843340516090393, pvalue=6.959407355955349e-11)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stats.shapiro(finalCountry['pointsbyprice'][finalCountry['continent'] == 'France'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ShapiroResult(statistic=0.9921355843544006, pvalue=1.0970900632401026e-07)"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stats.shapiro(finalCountry['pointsbyprice'][finalCountry['continent'] == 'Italy'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ShapiroResult(statistic=0.9711828827857971, pvalue=5.5788859754102305e-06)"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stats.shapiro(finalCountry['pointsbyprice'][finalCountry['continent'] == 'Spain'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Ни одна выборка не прошла тест на нормальность. Поэтому будем применять критерий Краскела — Уоллиса."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "KruskalResult(statistic=54.48358542398506, pvalue=8.848610227129654e-12)"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stats.kruskal(finalCountry['pointsbyprice'][finalCountry['continent'] == 'California'],\n",
    "             finalCountry['pointsbyprice'][finalCountry['continent'] == 'France'],\n",
    "             finalCountry['pointsbyprice'][finalCountry['continent'] == 'Italy'],\n",
    "             finalCountry['pointsbyprice'][finalCountry['continent'] == 'Spain'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Pvalue опять очень мало, поэтому гипотезу о равенстве средних отвергаем. Т.е. среднее значение величины, характеризующей качество, у выборок отличается."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Поскольку выборки не имеют нормального распределения, то после критерия Краскела - Уоллиса будем применять post-hoc тест Данна:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: scikit_posthocs in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (0.6.6)Note: you may need to restart the kernel to use updated packages.\n",
      "\n",
      "Requirement already satisfied: statsmodels in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from scikit_posthocs) (0.12.1)\n",
      "Requirement already satisfied: matplotlib in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from scikit_posthocs) (3.3.2)\n",
      "Requirement already satisfied: pandas>=0.20.0 in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from scikit_posthocs) (1.1.5)\n",
      "Requirement already satisfied: scipy in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from scikit_posthocs) (1.5.2)\n",
      "Requirement already satisfied: numpy in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from scikit_posthocs) (1.19.2)\n",
      "Requirement already satisfied: seaborn in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from scikit_posthocs) (0.11.0)\n",
      "Requirement already satisfied: cycler>=0.10 in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from matplotlib->scikit_posthocs) (0.10.0)\n",
      "Requirement already satisfied: numpy in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from scikit_posthocs) (1.19.2)\n",
      "Requirement already satisfied: kiwisolver>=1.0.1 in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from matplotlib->scikit_posthocs) (1.2.0)\n",
      "Requirement already satisfied: python-dateutil>=2.1 in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from matplotlib->scikit_posthocs) (2.8.1)\n",
      "Requirement already satisfied: pillow>=6.2.0 in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from matplotlib->scikit_posthocs) (7.2.0)\n",
      "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.3 in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from matplotlib->scikit_posthocs) (2.4.7)\n",
      "Requirement already satisfied: certifi>=2020.06.20 in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from matplotlib->scikit_posthocs) (2020.6.20)\n",
      "Requirement already satisfied: six in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from cycler>=0.10->matplotlib->scikit_posthocs) (1.15.0)\n",
      "Requirement already satisfied: numpy in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from scikit_posthocs) (1.19.2)\n",
      "Requirement already satisfied: pytz>=2017.2 in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from pandas>=0.20.0->scikit_posthocs) (2020.1)\n",
      "Requirement already satisfied: python-dateutil>=2.1 in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from matplotlib->scikit_posthocs) (2.8.1)\n",
      "Requirement already satisfied: six in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from cycler>=0.10->matplotlib->scikit_posthocs) (1.15.0)\n",
      "Requirement already satisfied: numpy in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from scikit_posthocs) (1.19.2)\n",
      "Requirement already satisfied: matplotlib in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from scikit_posthocs) (3.3.2)\n",
      "Requirement already satisfied: numpy in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from scikit_posthocs) (1.19.2)\n",
      "Requirement already satisfied: pandas>=0.20.0 in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from scikit_posthocs) (1.1.5)\n",
      "Requirement already satisfied: scipy in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from scikit_posthocs) (1.5.2)\n",
      "Requirement already satisfied: patsy>=0.5 in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from statsmodels->scikit_posthocs) (0.5.1)\n",
      "Requirement already satisfied: scipy in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from scikit_posthocs) (1.5.2)\n",
      "Requirement already satisfied: pandas>=0.20.0 in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from scikit_posthocs) (1.1.5)\n",
      "Requirement already satisfied: numpy in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from scikit_posthocs) (1.19.2)\n",
      "Requirement already satisfied: numpy in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from scikit_posthocs) (1.19.2)\n",
      "Requirement already satisfied: six in c:\\users\\123\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from cycler>=0.10->matplotlib->scikit_posthocs) (1.15.0)\n"
     ]
    }
   ],
   "source": [
    "pip install scikit_posthocs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>3.951965e-01</td>\n",
       "      <td>0.000029</td>\n",
       "      <td>1.642397e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3.951965e-01</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>0.000019</td>\n",
       "      <td>1.103148e-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2.895657e-05</td>\n",
       "      <td>1.862698e-05</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>6.568283e-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.642397e-08</td>\n",
       "      <td>1.103148e-08</td>\n",
       "      <td>0.000657</td>\n",
       "      <td>1.000000e+00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              1             2         3             4\n",
       "1  1.000000e+00  3.951965e-01  0.000029  1.642397e-08\n",
       "2  3.951965e-01  1.000000e+00  0.000019  1.103148e-08\n",
       "3  2.895657e-05  1.862698e-05  1.000000  6.568283e-04\n",
       "4  1.642397e-08  1.103148e-08  0.000657  1.000000e+00"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import scikit_posthocs as spp\n",
    "spp.posthoc_dunn([finalCountry['pointsbyprice'][finalCountry['continent'] == 'California'],\n",
    "             finalCountry['pointsbyprice'][finalCountry['continent'] == 'France'],\n",
    "             finalCountry['pointsbyprice'][finalCountry['continent'] == 'Italy'],\n",
    "             finalCountry['pointsbyprice'][finalCountry['continent'] == 'Spain']], p_adjust='fdr_bh')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "В таблице приведены значения p-value. Видно, что средние не отличаются для 1-ой и 2-ой выборок (p-value > 0.05), т.е. для Калифорнии и Франции.\n",
    "\n",
    "\n",
    "Вывод: в Калифорнии и Франции нет отклонений, а в остальных есть. А из вида \"ящика с усами\" видно, что соотношение цена-качество в данной ценовой (70-150) категории хуже всего у испанского вина, затем у итальянского. А у калифорнийского и французского вин соотношение одинаково и лучше других."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Теперь посмотрим просто по оценкам. Тут нужно использовать критерий Хи-квадрат, потому что распределение - дискретное.\n",
    "\n",
    "Посмотрим таблицу сопряженности:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "continent  California  France  Italy  Spain\n",
      "points                                     \n",
      "81                  3       0      0      2\n",
      "82                  4       0      0      3\n",
      "83                  4       2      2      1\n",
      "84                 25       3      3      2\n",
      "85                 41       3     13     10\n",
      "86                 74       5     40      4\n",
      "87                108      21     63     14\n",
      "88                153      48    118     23\n",
      "89                 94      80    137     19\n",
      "90                313     122    208     31\n",
      "91                293     169    191     43\n",
      "92                377     253    273     63\n",
      "93                424     314    268     50\n",
      "94                404     207    172     34\n",
      "95                184      92     92     11\n",
      "96                 68      21     35      6\n",
      "97                 36       4     21      2\n",
      "98                 10       1      4      0\n",
      "99                  5       0      0      0\n"
     ]
    }
   ],
   "source": [
    "Country_crosstab = pd.crosstab(finalCountry['points'], \n",
    "                            finalCountry['continent'],  \n",
    "                               margins = False) \n",
    "print(Country_crosstab) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(297.5668563558681,\n",
       " 2.2266833355893947e-35,\n",
       " 54,\n",
       " array([[2.21171704e+00, 1.13540436e+00, 1.38443356e+00, 2.68445045e-01],\n",
       "        [3.09640385e+00, 1.58956610e+00, 1.93820699e+00, 3.75823063e-01],\n",
       "        [3.98109066e+00, 2.04372784e+00, 2.49198042e+00, 4.83201081e-01],\n",
       "        [1.45973324e+01, 7.49366875e+00, 9.13726152e+00, 1.77173730e+00],\n",
       "        [2.96370083e+01, 1.52144184e+01, 1.85514098e+01, 3.59716360e+00],\n",
       "        [5.44082391e+01, 2.79309472e+01, 3.40570657e+01, 6.60374810e+00],\n",
       "        [9.11227419e+01, 4.67786595e+01, 5.70386628e+01, 1.10599358e+01],\n",
       "        [1.51281445e+02, 7.76616579e+01, 9.46952558e+01, 1.83616411e+01],\n",
       "        [1.45973324e+02, 7.49366875e+01, 9.13726152e+01, 1.77173730e+01],\n",
       "        [2.98139456e+02, 1.53052507e+02, 1.86621644e+02, 3.61863920e+01],\n",
       "        [3.07871011e+02, 1.58048286e+02, 1.92713152e+02, 3.73675502e+01],\n",
       "        [4.27303731e+02, 2.19360122e+02, 2.67472565e+02, 5.18635826e+01],\n",
       "        [4.67114638e+02, 2.39797400e+02, 2.92392369e+02, 5.66955934e+01],\n",
       "        [3.61394564e+02, 1.85525072e+02, 2.26216444e+02, 4.38639203e+01],\n",
       "        [1.67648151e+02, 8.60636502e+01, 1.04940064e+02, 2.03481344e+01],\n",
       "        [5.75046429e+01, 2.95205133e+01, 3.59952727e+01, 6.97957116e+00],\n",
       "        [2.78676346e+01, 1.43060949e+01, 1.74438629e+01, 3.38240756e+00],\n",
       "        [6.63515111e+00, 3.40621307e+00, 4.15330069e+00, 8.05335134e-01],\n",
       "        [2.21171704e+00, 1.13540436e+00, 1.38443356e+00, 2.68445045e-01]]))"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sp.stats.chi2_contingency(Country_crosstab)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Получается, что по оценкам тоже есть различие."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
